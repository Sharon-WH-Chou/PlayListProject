#BlueJ class context
comment0.target=Song
comment0.text=\n\ File\ for\ a\ Song\ class\ to\ be\ used\ in\ the\ Playlist\ Project\n\ @Sharon\ Chou\ and\ Kamryn\ Chan\n\ @2022-01-19\n
comment1.params=title\ artist\ dur
comment1.target=Song(java.lang.String,\ java.lang.String,\ double)
comment1.text=\n\ Constructor--\ what\ information\ needs\ to\ be\ given\ to\ make\ a\ Song?\n\ How\ will\ you\ handle\ 'liked'\ songs?\ It\ makes\ sense\ for\ a\ Song\ not\ be\ 'liked'\ by\ default\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\n\ Gets\ name.\n\ @return\ name\ of\ song.\n
comment3.params=
comment3.target=java.lang.String\ getArtist()
comment3.text=\n\ Gets\ artist.\n\ @return\ artist\ who\ wrote\ the\ song.\n
comment4.params=
comment4.target=double\ getDuration()
comment4.text=\n\ Gets\ duration.\ \n\ @return\ the\ length\ of\ the\ song\ in\ seconds.\ \n
comment5.params=
comment5.target=boolean\ getLiked()
comment5.text=\n\ Returns\ a\ boolean\ value\ to\ show\ whether\ song\ is\ liked\ or\ not.\ \n\ @return\ boolean\ of\ liked\ status\n
comment6.params=
comment6.target=void\ setLikedStatus()
comment6.text=\n\ Sets\ liked\ status\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\n\ Creates\ a\ string\ that\ can\ be\ used\ to\ display\ the\ playlist\n\ @return\ a\ string\ that\ can\ be\ used\ to\ display\ the\ playlist\n
numComments=8
